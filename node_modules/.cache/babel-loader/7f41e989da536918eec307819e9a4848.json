{"ast":null,"code":"import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport useLatest from 'use-latest';\n\nvar useBeforeunload = function useBeforeunload(handler) {\n  if (handler === void 0) {\n    handler = function handler() {};\n  }\n\n  if (process.env.NODE_ENV !== 'production' && typeof handler !== 'function') {\n    throw new TypeError(\"Expected \\\"handler\\\" to be a function, not \" + typeof handler + \".\");\n  }\n\n  var handlerRef = useLatest(handler);\n  useEffect(function () {\n    var handleBeforeunload = function handleBeforeunload(event) {\n      var returnValue = handlerRef.current(event); // Chrome requires `returnValue` to be set.\n\n      if (event.defaultPrevented) {\n        event.returnValue = '';\n      }\n\n      if (typeof returnValue === 'string') {\n        event.returnValue = returnValue;\n        return returnValue;\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeunload);\n    return function () {\n      window.removeEventListener('beforeunload', handleBeforeunload);\n    };\n  }, []);\n};\n\nvar Beforeunload = function Beforeunload(props) {\n  useBeforeunload(props.onBeforeunload);\n  return props.children;\n};\n\nBeforeunload.defaultProps = {\n  children: null\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Beforeunload.propTypes = {\n    children: PropTypes.any,\n    onBeforeunload: PropTypes.func.isRequired\n  };\n}\n\nexport { Beforeunload, useBeforeunload };","map":{"version":3,"sources":["E:/react/kando/kkando/node_modules/react-beforeunload/lib/index.esm.js"],"names":["PropTypes","useEffect","useLatest","useBeforeunload","handler","process","env","NODE_ENV","TypeError","handlerRef","handleBeforeunload","event","returnValue","current","defaultPrevented","window","addEventListener","removeEventListener","Beforeunload","props","onBeforeunload","children","defaultProps","propTypes","any","func","isRequired"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,OAAzB,EAAkC;AACtD,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,SAASA,OAAT,GAAmB,CAAE,CAA/B;AACD;;AAED,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,OAAOH,OAAP,KAAmB,UAAhE,EAA4E;AAC1E,UAAM,IAAII,SAAJ,CAAc,gDAAgD,OAAOJ,OAAvD,GAAiE,GAA/E,CAAN;AACD;;AAED,MAAIK,UAAU,GAAGP,SAAS,CAACE,OAAD,CAA1B;AACAH,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIS,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AAC1D,UAAIC,WAAW,GAAGH,UAAU,CAACI,OAAX,CAAmBF,KAAnB,CAAlB,CAD0D,CACb;;AAE7C,UAAIA,KAAK,CAACG,gBAAV,EAA4B;AAC1BH,QAAAA,KAAK,CAACC,WAAN,GAAoB,EAApB;AACD;;AAED,UAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;AACnCD,QAAAA,KAAK,CAACC,WAAN,GAAoBA,WAApB;AACA,eAAOA,WAAP;AACD;AACF,KAXD;;AAaAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwCN,kBAAxC;AACA,WAAO,YAAY;AACjBK,MAAAA,MAAM,CAACE,mBAAP,CAA2B,cAA3B,EAA2CP,kBAA3C;AACD,KAFD;AAGD,GAlBQ,EAkBN,EAlBM,CAAT;AAmBD,CA7BD;;AA+BA,IAAIQ,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC9ChB,EAAAA,eAAe,CAACgB,KAAK,CAACC,cAAP,CAAf;AACA,SAAOD,KAAK,CAACE,QAAb;AACD,CAHD;;AAKAH,YAAY,CAACI,YAAb,GAA4B;AAC1BD,EAAAA,QAAQ,EAAE;AADgB,CAA5B;;AAIA,IAAIhB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCW,EAAAA,YAAY,CAACK,SAAb,GAAyB;AACvBF,IAAAA,QAAQ,EAAErB,SAAS,CAACwB,GADG;AAEvBJ,IAAAA,cAAc,EAAEpB,SAAS,CAACyB,IAAV,CAAeC;AAFR,GAAzB;AAID;;AAED,SAASR,YAAT,EAAuBf,eAAvB","sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport useLatest from 'use-latest';\n\nvar useBeforeunload = function useBeforeunload(handler) {\n  if (handler === void 0) {\n    handler = function handler() {};\n  }\n\n  if (process.env.NODE_ENV !== 'production' && typeof handler !== 'function') {\n    throw new TypeError(\"Expected \\\"handler\\\" to be a function, not \" + typeof handler + \".\");\n  }\n\n  var handlerRef = useLatest(handler);\n  useEffect(function () {\n    var handleBeforeunload = function handleBeforeunload(event) {\n      var returnValue = handlerRef.current(event); // Chrome requires `returnValue` to be set.\n\n      if (event.defaultPrevented) {\n        event.returnValue = '';\n      }\n\n      if (typeof returnValue === 'string') {\n        event.returnValue = returnValue;\n        return returnValue;\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeunload);\n    return function () {\n      window.removeEventListener('beforeunload', handleBeforeunload);\n    };\n  }, []);\n};\n\nvar Beforeunload = function Beforeunload(props) {\n  useBeforeunload(props.onBeforeunload);\n  return props.children;\n};\n\nBeforeunload.defaultProps = {\n  children: null\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Beforeunload.propTypes = {\n    children: PropTypes.any,\n    onBeforeunload: PropTypes.func.isRequired\n  };\n}\n\nexport { Beforeunload, useBeforeunload };\n"]},"metadata":{},"sourceType":"module"}